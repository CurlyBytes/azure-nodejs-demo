jobs:
- job: Docker Build
  displayName: Build, Scan and Push
  steps:

  - template: ../steps/debug.yaml

  - bash: |
      npm ci
      npm run compile-sass
      docker build -t $(dockerTag) .
    displayName: docker - build

  - task: SnykSecurityScan@0
    displayName: Snyk - security scan
    inputs:
      serviceConnectionEndpoint: 'snyk-api-connection'
      testType: 'container'
      dockerImageName: $(dockerTag)
      dockerfilePath: 'Dockerfile'
      monitorOnBuild: true
      failOnIssues: true

  # See README.md about why `docker login`
  - bash: docker login $(dockerRegistry) --username $ACR_USERNAME --password $ACR_PASSWORD
    displayName: registry - login
    env:
      ACR_USERNAME: $(kv-acr-username)
      ACR_PASSWORD: $(kv-acr-password)

  - bash: docker push $(dockerTag)
    displayName: docker - push

  - bash: docker logout $(dockerRegistry)
    displayName: registry - logout

  - task: AzureCLI@2
    displayName: 'registry - lock image (prod)'
    condition: ${{ eq(variables.isTag, 'True') }}
    inputs:
      azureSubscription: $(armConnection)
      scriptType: bash
      scriptLocation: inlineScript
      inlineScript: |
        az acr repository update \
          --name $(dockerRegistry) \
          --image $(imageName):$(imageTag) \
          --write-enabled false