name: $(BuildID)

trigger:
- production
- main
- refactor/more-ci

pr: none

pool:
  vmImage: 'ubuntu-latest'

variables:
- template: vars/global.yaml

stages:
- stage: Deployment

  # need stage scope to process values ðŸ¤¨
  variables:
  - ${{ if eq(variables.isMain, 'True') }}:
    - template: vars/dev.yaml
  - ${{ if eq(variables.isProduction, 'True') }}:
    - template: vars/prod.yaml
  jobs:

  # Deploy Web App
  # --------------
  - job: Deploy
    steps:
  #   - template: steps/app-service.yaml
    # - script: echo "##vso[task.setvariable variable=imageTag]$(npm run --silent my-version)"
    #   displayName: Override imageTag with app version
    #   condition: ${{ variables.isProduction }}

    - template: steps/debug.yaml

    # - task: AzureWebAppContainer@1
    #   displayName: "App Service - deploy container"
    #   inputs:
    #     appName:  $(webAppName)
    #     azureSubscription: $(armConnection)
    #     imageName: $(dockerRegistry)/$(imageName):$(imageTag)

  # Asset Pipeline
  # --------------
  - template: jobs/asset-pipeline.yaml
    parameters:
      isMain: true
      # ${{ if eq(variables.isMain, 'True') }}:
      #   isMain: true
      # ${{ if eq(variables.isProduction, 'True') }}:
      #   isProduction: true
  # - job: AssetPipeline
  #   steps:
  #   - template: steps/debug.yaml
  #   - template: steps/asset-pipeline.yaml
  #     parameters:
  #       blobContainer: ${{ variables.blobContainer }}
  #       cdnEndpoint: ${{ variables.cdnEndpoint }}
    # - script: |
    #     npm ci
    #     npm run compile-sass
    #   displayName: 'Compile Sass to CSS'

    # - task: AzureCLI@2
    #   displayName: Assets - Upload and Purge Cache
    #   inputs:
    #     azureSubscription: $(armConnection)
    #     scriptType: bash
    #     scriptLocation: inlineScript
    #     inlineScript: |
    #       az --version

    #       az storage blob upload-batch \
    #         --account-name $(storageAccount) \
    #         --source ./assets \
    #         --destination $(blobContainer)

    #       az cdn endpoint purge \
    #         --resource-group $(resourceGroup) \
    #         --name $(cdnEndpoint) \
    #         --profile-name $(cdnProfileName) \
    #         --content-paths '/css/*' '/images/*'
